/*
 * dts file for Topic Miami MPSoC
 *
 * (C) Copyright 2017, Topic Embedded Products BV
 * Mike Looijmans <mike.looijmans@topic.nl>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 */

#include "zynqmp-topic-miamimp.dts"

/* Common components for MIO parts of Florida boards. These are
 * accessible even without programming any logic. */
/ {
	/* Regulator for the 5V USB VBUS power line. This is connected
	 * to the second output of the GPIO expander. */
	reg_usb0_vbus: regulator_usb {
		compatible = "regulator-fixed";
		regulator-name = "usb0-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpioexf 1 0>;
		enable-active-high;
		regulator-always-on; /* USB host mode */
	};

	xtal_27Mhz: clock_xtal_27Mhz {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <27000000>;
	};

	gpio_keys: gpio-keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;
		power {
			label = "power";
			gpios = <&gpioexf 2 1>; /* Input 2, active low */
			linux,code = <116>; /* KEY_POWER */
			gpio-key,wakeup;
		};
		/* On-board push buttons in reference design */
		s2 {
			label = "s2";
			gpios = <&gpio 95 1>; /* EMIO 17, active low */
			linux,code = <60>; /* KEY_F2 */
			gpio-key,wakeup;
		};
		s3 {
			label = "s3";
			gpios = <&gpio 96 1>; /* EMIO 18, active low */
			linux,code = <61>; /* KEY_F3 */
			gpio-key,wakeup;
		};
	};

	gpio-poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpioexf 5 1>; /* Output 5, active low */
		input;
	};

	charger: battery-charger {
		compatible = "gpio-charger";
		charger-type = "mains";
		gpios = <&gpioexf 6 1>; /* Pin 6 of IO expander, active low */
	};
};

&leds {
	traffic_led_d4 { /* Red */
		label = "d4:red";
		gpios = <&gpio 82 0>; /* EMIO 4 */
		linux,default-trigger = "mmc1";
	};
	traffic_led_d3 { /* Orange */
		label = "d3:orange";
		gpios = <&gpio 81 0>; /* EMIO 3 */
		linux,default-trigger = "mmc0";
	};
	traffic_led_d2 { /* Green */
		label = "d2:green";
		gpios = <&gpio 80 0>; /* EMIO 2 */
	};
	traffic_led_d6 { /* Green */
		label = "d6:green";
		gpios = <&gpio 79 0>; /* EMIO 1 */
	};
	traffic_led_d5 { /* Green */
		label = "d5:green";
		gpios = <&gpio 78 0>; /* EMIO 0 */
	};
};

/* SD card with level shifter */
&sdhci1 {
	status = "okay";
	no-1-8-v;	/* for 1.0 silicon */
	xlnx,mio_bank = <1>;
	disable-wp; /* We don't have a write-protect detection */
};

&serdes {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&dwc3_0 {
	status = "okay";
	dr_mode = "host"; /* "host", "peripheral" or "otg" */
	maximum-speed = "high-speed"; /* super-speed not available on carrier */
};

&sata {
	status = "okay";
	/* SATA OOB timing settings */
	ceva,p0-cominit-params = /bits/ 8 <0x18 0x40 0x18 0x28>;
	ceva,p0-comwake-params = /bits/ 8 <0x06 0x14 0x08 0x0E>;
	ceva,p0-burst-params = /bits/ 8 <0x13 0x08 0x4A 0x06>;
	ceva,p0-retry-params = /bits/ 16 <0x96A4 0x3FFC>;
	ceva,p1-cominit-params = /bits/ 8 <0x18 0x40 0x18 0x28>;
	ceva,p1-comwake-params = /bits/ 8 <0x06 0x14 0x08 0x0E>;
	ceva,p1-burst-params = /bits/ 8 <0x13 0x08 0x4A 0x06>;
	ceva,p1-retry-params = /bits/ 16 <0x96A4 0x3FFC>;
	/* For now, only try one instance */
	phy-names = "sata-phy", "sata-phy";
	/* Use refclock 0 at 150MHz for both instances */
	phys = <&lane0 PHY_TYPE_SATA 0 0 150000000>,
	       <&lane1 PHY_TYPE_SATA 1 0 150000000>;
	/* Using SI514 on miami through logic as REFCLK0. Must be programmed to 150MHz. */
	assigned-clocks = <&si514s>;
	assigned-clock-rates = <150000000>;
	/* Apparently doesn't work this way? */
	clocks = <&si514s>;
};

/* I2C bus layout */
&i2c0 {
	i2cmux: i2cswitch@70 {
		compatible = "nxp,pca9546";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x70>;

		i2cmux_0: i2c@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <0>;
			/* Clock generator TI I2C chip, 27MHz . */
			clockgen: cdce925pw@64 {
				compatible = "ti,cdce925";
				reg = <0x64>;
				clocks = <&xtal_27Mhz>;
				xtal-load-pf = <5>; /* Crystal load-capacitor value */
				#clock-cells = <1>;
				/* PLL options, optional. For example to get SSC 1%
				 * centered, supply the following extra data:
				 *PLL2 {
				 *	spread-spectrum = <4>;
				 *	spread-spectrum-center;
				 *};
				 */
			};
			/* HDMI OUT */
			adv7511: adv7511@39 {
				compatible = "adi,adv7511";
				reg = <0x39>, <0x3f>;
				reg-names = "primary", "edid";
				adi,input-depth = <8>;
				adi,input-colorspace = "rgb";
				adi,input-clock = "1x";
				adi,input-style = <1>;
				adi,input-justification = "right";
				adi,clock-delay = <0>;
				#sound-dai-cells = <0>;

				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					port@0 {
						reg = <0>;
						adv7511_in: endpoint {
							remote-endpoint = <&axi_hdmi_out>;
						};
					};
					port@1 {
						reg = <1>;
					};
				};
			};
		};
		i2cmux_2: i2c@2 {
			/* GEN */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <2>;
			/* GPIO expander */
			gpioexf: pca953x@20 {
				compatible = "nxp,pca9534";
				reg = <0x20>;
				/* 0=USB_OTG_OC_N 1=USB_OTG_EN_N 2=n.c. ...*/
				gpio-controller;
				#gpio-cells = <2>;
				interrupt-controller;
				/* IRQ line connected to MIO ??? */
				interrupt-parent = <&gpio>;
				interrupts = <36 0x8>; /* GPIO 36, IRQ_TYPE_LEVEL_LOW */
			};
			/* Touch */
			touch: ad7879@2f {
				status = "disabled"; /* No display panel support, so touch is pointless */
				compatible = "ad7879";
				reg = <0x2F>;
				interrupt-parent = <&gpio>;
				interrupts = <94 0x2>; /* GPIO 78+16 (EMIO 16), falling edge */
				touchscreen-swapped-x-y;
				adi,resistance-plate-x = <620>;
				touchscreen-max-pressure = <4096>;
				adi,first-conversion-delay = /bits/ 8 <3>;
				adi,acquisition-time = /bits/ 8 <1>;
				adi,median-filter-size = /bits/ 8 <2>;
				adi,averaging = /bits/ 8 <1>;
				adi,conversion-interval = /bits/ 8 <255>;
			};
			/* EEPROM */
			eepromc: eepromc@50 {
				compatible = "at24,24c04";
				reg = <0x50>;
			};
			/* Programmable clock */
			si514c: si514@55 {
				reg = <0x55>;
				#clock-cells = <0>;
				compatible = "silabs,si514";
			};
			/* Battery gauge */
			fuelgauge: battery-gauge {
				compatible = "ltc2943";
				reg = <0x64>;
				lltc,resistor-sense = <15>; /* 15 mOhm */
				lltc,prescaler-exponent = <5>; /* 2^(2*5) = 1024 */
				power-supplies = <&charger>;
			};
		};
		i2c@3 {
			/* HDMI IN */
			#address-cells = <1>;
			#size-cells = <0>;
			reg = <3>;
			/* copied from zynq-zed-imageon.dts */
			adv7611@4c {
				compatible = "adi,adv7611";
				reg = <0x4c>;
				#address-cells = <0x1>;
				#size-cells = <0x0>;
				bus-width = <24>;
				hsync-active = <0>; /* Parallel bus */
				vsync-active = <0>;
				interrupt-parent = <&gpio>;
				interrupts = <99 4>; /* EMIO 21 */
				adi,int1-config = <1>; /* ADV76XX_INT1_CONFIG_ACTIVE_LOW */
				reset-gpios = <&gpio 91 0>; /* EMIO 13 */
				port@0 {
					reg = <0x0>;
				};
				port@1 {
					reg = <0x1>;
					adv7611: endpoint {
						bus-width = <16>;
						remote-endpoint = <&axi_hdmi_rx>;
					};
				};
			};
		};
	};
};

/* Ethernet: Micrel PHY via logic to RGMII, on MDIO#3 */
&gem3 {
	status = "okay";
	phy-handle = <&gmiitorgmii>;
	phy-mode = "gmii";
	gmiitorgmii: gmiitorgmii@8 {
		compatible = "xlnx,gmii-to-rgmii-1.0";
		reg = <8>;
		phy-handle = <&phy3>;
	};
	phy3: phy@3 {
		device_type = "ethernet-phy";
		reg = <3>;
		interrupt-parent = <&gpio>;
		interrupts = <97 0x8>; /* GPIO 78+16+3, IRQ_TYPE_LEVEL_LOW */
		rxc-skew-ps = <1080>; /* Skew RX clock pad by 180 ps */
		txc-skew-ps = <840>;  /* Skew TX clock pad by -60 ps */
	};
};

/* USB connected through MIO and GPIO expander */
&usb0 {
	status = "okay";
	vbus-supply = <&reg_usb0_vbus>;
	dr_mode = "host"; /* "host", "peripheral" or "otg" */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb0_default>;
	/* USB reset connected to output 0 of expander */
	xlnx,phy-reset-gpio = <&gpioex 0 0>;
	xlnx,phy-reset-gpio-tristate;
};

/* FPGA content (reference design) */
&amba {
	axi_vdma_0: axivdma@a0040000 {
		compatible = "xlnx,axi-vdma-1.00.a";
		reg = <0x0 0xa0040000 0x0 0x10000>;
		#address-cells = <1>;
		#size-cells = <1>;
		#dma-cells = <1>;
		#dma-channels = <1>;
		clock-names = "s_axi_lite_aclk", "m_axi_mm2s_aclk", "m_axi_mm2s_aclk";
		clocks = <&clkc 71>, <&clkc 72>, <&clkc 72>; /* fclk0 and fclk1 */
		interrupt-parent = <&gic>;
		interrupts = <0 89 4>;
		dma-ranges = <0x00000000 0x00000000 0x80000000>;
		xlnx,num-fstores = <3>;
		xlnx,flush-fsync = <1>;
		xlnx,addrwidth = <32>;
		dma-channel@a0040000 {
			compatible = "xlnx,axi-vdma-mm2s-channel";
			interrupts = <0 89 4>; /* pl_ps_0[0] */
			xlnx,datawidth = <64>;
			xlnx,device-id = <0x0>;
		};
	};

	axi_hdmi_0: axi_hdmi@a0030000 {
		compatible = "adi,axi-hdmi-tx-1.00.a";
		reg = <0x0 0xa0030000 0x0 0x10000>;
		adi,is-rgb;
		dmas = <&axi_vdma_0 0>;
		dma-names = "video";
		clocks = <&clockgen 3>;
		port {
			axi_hdmi_out: endpoint {
				remote-endpoint = <&adv7511_in>;
			};
		};
	};

	axi_spdif_tx_0: axi-spdif-tx@a00f0000 {
		status = "disabled"; /* DMA connection unknown */
		compatible = "adi,axi-spdif-tx-1.00.a";
		reg = <0x0 0xa00f0000 0x0 0x1000>;
		/* TODO:  dmas = <&dmac_s 0>; */
		dma-names = "tx";
		clocks = <&clkc 71>, <&clockgen 1>, <&clockgen 1>;
		clock-names = "axi", "ref", "spdif";

		#sound-dai-cells = <0>;
	};


	axi_hdmi_rx_core: axi-hdmi-rx@a0020000 {
		compatible = "adi,axi-hdmi-rx-1.00.a";
		reg = <0x0 0xa0020000 0x0 0x10000>;
		dmas = <&axi_dmac 0>;
		dma-names = "rx";
		gpios = <&gpioexf 3 0>; /* HPD, hotplug control (?) */

		port {
			#address-cells = <0>;
			#size-cells = <0>;

			axi_hdmi_rx: endpoint {
				remote-endpoint = <&adv7611>;
				bus-width = <24>;
			};
		};
	};

	axi_dmac: dmac@a0000000 {
		compatible = "adi,axi-dmac-1.00.a";
		reg = <0x0 0xa0000000 0x0 0x10000>;
		#dma-cells = <1>;
		interrupt-parent = <&gic>;
		interrupts = <0 90 4>; /* pl_ps_0[1] */
		clocks = <&clkc 71>; /* fclk0 */

		adi,channels {
			#size-cells = <0>;
			#address-cells = <1>;
			dma-channel@0 {
				reg = <0>;
				adi,length-width = <14>;
				adi,source-bus-width = <64>;
				adi,source-bus-type = <2>;
				adi,destination-bus-width = <64>;
				adi,destination-bus-type = <0>;
				adi,2d;
			};
		};
	};
};

/ {
	adv7511_hdmi_snd {
		compatible = "simple-audio-card";
		simple-audio-card,name = "HDMI monitor";
		simple-audio-card,widgets =
			"Speaker", "Speaker";
		simple-audio-card,routing =
			"Speaker", "TX";

		simple-audio-card,dai-link@0 {
			format = "spdif";
			cpu {
				sound-dai = <&axi_spdif_tx_0>;
				frame-master;
				bitclock-master;
			};
			codec {
				sound-dai = <&adv7511>;
			};
		};
	};
};

&pinctrl0 {
	status = "okay";

	pinctrl_sdhci1_default: sdhci1-default {
		mux {
			groups = "sdio1_4bit_0_1_grp";
			function = "sdio1";
		};

		conf {
			groups = "sdio1_4bit_0_1_grp";
			slew-rate = <SLEW_RATE_SLOW>;
			io-standard = <IO_STANDARD_LVCMOS18>;
			bias-disable;
		};

		mux-cd {
			groups = "sdio1_0_cd_grp";
			function = "sdio1_cd";
		};

		conf-cd {
			groups = "sdio1_0_cd_grp";
			bias-high-impedance;
			bias-pull-up;
			slew-rate = <SLEW_RATE_SLOW>;
			io-standard = <IO_STANDARD_LVCMOS18>;
		};
	};

	pinctrl_usb0_default: usb0-default {
		mux {
			groups = "usb0_0_grp";
			function = "usb0";
		};

		conf {
			groups = "usb0_0_grp";
			slew-rate = <SLEW_RATE_SLOW>;
			io-standard = <IO_STANDARD_LVCMOS18>;
		};

		conf-rx {
			pins = "MIO52", "MIO53", "MIO55";
			bias-high-impedance;
		};

		conf-tx {
			pins = "MIO54", "MIO56", "MIO57", "MIO58", "MIO59",
			       "MIO60", "MIO61", "MIO62", "MIO63";
			bias-disable;
		};
	};
};
